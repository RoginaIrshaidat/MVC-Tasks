@model _1_Feb.Models.Product
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous">

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-md-2" for="ProductName">ProductName</label>
        @*@Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="col-md-10">
        <input class="form-control text-box single-line" id="ProductName" name="ProductName" type="text" value="" />
        <span class="field-validation-valid text-danger" data-valmsg-for="ProductName" data-valmsg-replace="true"></span>
        @*@Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })*@
    </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="UnitPrice">UnitPrice</label>
        @*@Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="col-md-10">
        <input class="form-control text-box single-line" data-val="true" data-val-number="The field UnitPrice must be a number." id="UnitPrice" name="UnitPrice" type="text" value="" />
        <span class="field-validation-valid text-danger" data-valmsg-for="UnitPrice" data-valmsg-replace="true"></span>
        @*@Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })*@
    </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="UnitInStock">UnitInStock</label>

        @*@Html.LabelFor(model => model.UnitInStock, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            <div class="checkbox">
                <select class="list-box tri-state" id="UnitInStock" name="UnitInStock">
                    <option selected="selected" value="">Select</option>
                    <option value="true">True</option>
                    <option value="false">False</option>
                </select>
                <span class="field-validation-valid text-danger" data-valmsg-for="UnitInStock" data-valmsg-replace="true"></span>
                @*@Html.EditorFor(model => model.UnitInStock)
                @Html.ValidationMessageFor(model => model.UnitInStock, "", new { @class = "text-danger" })*@
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="CategoryID">CategoryID</label>
        @*@Html.LabelFor(model => model.CategoryID, "CategoryID", htmlAttributes: new { @class = "control-label col-md-2" })*@
    <div class="col-md-10">
        <select class="form-control" id="CategoryID" name="CategoryID">
            <option value="1">IPhone</option>
            <option value="2">Samsung</option>
            <option value="3">Huawei</option>
        </select>
        <span class="field-validation-valid text-danger" data-valmsg-for="CategoryID" data-valmsg-replace="true"></span>

        @*@Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })*@
    </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-primary" })
</div>
